-- MySQL Script generated by MySQL Workbench
-- Mon Dec  3 17:27:10 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema modelo
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema modelo
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `modelo` DEFAULT CHARACTER SET utf8 ;
USE `modelo` ;

-- -----------------------------------------------------
-- Table `modelo`.`INSTITUTO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `modelo`.`INSTITUTO` (
  `ID_instituto` INT NOT NULL,
  `biologicas` VARCHAR(30) NULL,
  `agrarias` VARCHAR(30) NULL,
  `exatas` VARCHAR(30) NULL,
  `humanas` VARCHAR(30) NULL,
  PRIMARY KEY (`ID_instituto`));


-- -----------------------------------------------------
-- Table `modelo`.`CURSO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `modelo`.`CURSO` (
  `id_curso` INT NOT NULL,
  `curso` VARCHAR(30) NULL,
  `INSTITUTO_ID_instituto` INT NOT NULL,
  PRIMARY KEY (`id_curso`, `INSTITUTO_ID_instituto`),
  INDEX `fk_CURSO_INSTITUTO1_idx` (`INSTITUTO_ID_instituto` ASC),
  CONSTRAINT `fk_CURSO_INSTITUTO1`
    FOREIGN KEY (`INSTITUTO_ID_instituto`)
    REFERENCES `modelo`.`INSTITUTO` (`ID_instituto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `modelo`.`ALUNO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `modelo`.`ALUNO` (
  `matricula` INT NOT NULL,
  `nome` VARCHAR(30) NULL,
  `sexo` VARCHAR(30) NULL,
  `tituloEleitor` INT NULL,
  `CPF` CHAR NULL,
  `SegundoGrau` VARCHAR(30) NULL,
  `DataNasci` DATE NULL,
  `telefone` INT NULL,
  `endereco_aluno` VARCHAR(30) NULL,
  `RG` CHAR NULL,
  `nomePai` VARCHAR(30) NULL,
  `nomeMae` VARCHAR(30) NULL,
  `CURSO_id_curso` INT NOT NULL,
  `endereco_responsavel` VARCHAR(45) NULL,
  PRIMARY KEY (`matricula`),
  INDEX `fk_ALUNO_CURSO1_idx` (`CURSO_id_curso` ASC),
  UNIQUE INDEX `RG_UNIQUE` (`RG` ASC),
  UNIQUE INDEX `CPF_UNIQUE` (`CPF` ASC),
  CONSTRAINT `fk_ALUNO_CURSO1`
    FOREIGN KEY (`CURSO_id_curso`)
    REFERENCES `modelo`.`CURSO` (`id_curso`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `modelo`.`NOTA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `modelo`.`NOTA` (
  `ID_disciplina` INT NOT NULL,
  `notaFinal` FLOAT NULL,
  `situacao` VARCHAR(30) NULL,
  `numFaltas` INT NULL,
  PRIMARY KEY (`ID_disciplina`));


-- -----------------------------------------------------
-- Table `modelo`.`CARGO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `modelo`.`CARGO` (
  `ID_cargo` INT NOT NULL,
  `DataFinal` DATE NULL,
  `DataInicial` DATE NULL,
  `Dir_pesquisa` VARCHAR(30) NULL,
  `Dir_extensao_cultura` VARCHAR(30) NULL,
  `Dir_ensino` VARCHAR(30) NULL,
  `Dir_geral` VARCHAR(30) NULL,
  `Dir_fin` VARCHAR(30) NULL,
  `Con_academico` VARCHAR(30) NULL,
  PRIMARY KEY (`ID_cargo`));


-- -----------------------------------------------------
-- Table `modelo`.`FUNCIONARIO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `modelo`.`FUNCIONARIO` (
  `matricula` INT NOT NULL,
  `nome` VARCHAR(30) NULL,
  `endereco` VARCHAR(30) NULL,
  `telefone` INT NULL,
  `cpf` CHAR NOT NULL,
  PRIMARY KEY (`matricula`));


-- -----------------------------------------------------
-- Table `modelo`.`DEPENDENTE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `modelo`.`DEPENDENTE` (
  `CPF` CHAR NOT NULL,
  `parentesco` VARCHAR(30) NULL,
  `sexo` VARCHAR(30) NULL,
  `dataNasc` DATE NULL,
  `nome` VARCHAR(30) NULL,
  `FUNCIONARIO_matricula` INT NOT NULL,
  INDEX `fk_DEPENDENTE_FUNCIONARIO_idx` (`FUNCIONARIO_matricula` ASC),
  CONSTRAINT `fk_DEPENDENTE_FUNCIONARIO`
    FOREIGN KEY (`FUNCIONARIO_matricula`)
    REFERENCES `modelo`.`FUNCIONARIO` (`matricula`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `modelo`.`DISCIPLINAS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `modelo`.`DISCIPLINAS` (
  `codigo_disciplina` INT NOT NULL,
  `cargaHoraria` INT NULL,
  `nome` VARCHAR(30) NULL,
  `numeroCreditos` INT NULL,
  `cargaHoraria_pratica` INT NULL,
  `cargaHoraria_teorica` INT NULL,
  PRIMARY KEY (`codigo_disciplina`));


-- -----------------------------------------------------
-- Table `modelo`.`PERIODO_LETIVO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `modelo`.`PERIODO_LETIVO` (
  `ID_periodo` INT NOT NULL,
  `ano` date NULL,
  `tipo_semestre` INT NULL,
  PRIMARY KEY (`ID_periodo`));


-- -----------------------------------------------------
-- Table `modelo`.`PROFESSOR`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `modelo`.`PROFESSOR` (
  `FUNCIONARIO_matricula` INT NOT NULL,
  `especializacao` VARCHAR(30) NOT NULL,
  `CARGO_ID_cargoint` INT NOT NULL,
  `CURSO_id_curso` INT NOT NULL,
  `CURSO_INSTITUTO_ID_instituto` INT NOT NULL,
  PRIMARY KEY (`FUNCIONARIO_matricula`),
  INDEX `fk_PROFESSOR_CARGO1_idx` (`CARGO_ID_cargoint` ASC),
  INDEX `fk_PROFESSOR_CURSO1_idx` (`CURSO_id_curso` ASC, `CURSO_INSTITUTO_ID_instituto` ASC),
  CONSTRAINT `fk_PROFESSOR_FUNCIONARIO1`
    FOREIGN KEY (`FUNCIONARIO_matricula`)
    REFERENCES `modelo`.`FUNCIONARIO` (`matricula`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PROFESSOR_CARGO1`
    FOREIGN KEY (`CARGO_ID_cargoint`)
    REFERENCES `modelo`.`CARGO` (`ID_cargo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PROFESSOR_CURSO1`
    FOREIGN KEY (`CURSO_id_curso` , `CURSO_INSTITUTO_ID_instituto`)
    REFERENCES `modelo`.`CURSO` (`id_curso` , `INSTITUTO_ID_instituto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `modelo`.`TECNICO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `modelo`.`TECNICO` (
  `FUNCIONARIO_matricula` INT NOT NULL,
  `especializacao` INT NOT NULL,
  `CARGO_ID_cargoint` INT NOT NULL,
  PRIMARY KEY (`FUNCIONARIO_matricula`),
  INDEX `fk_TECNICO_CARGO1_idx` (`CARGO_ID_cargoint` ASC),
  CONSTRAINT `fk_TECNICO_FUNCIONARIO1`
    FOREIGN KEY (`FUNCIONARIO_matricula`)
    REFERENCES `modelo`.`FUNCIONARIO` (`matricula`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_TECNICO_CARGO1`
    FOREIGN KEY (`CARGO_ID_cargoint`)
    REFERENCES `modelo`.`CARGO` (`ID_cargo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `modelo`.`TURMA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `modelo`.`TURMA` (
  `ID_turma` INT NOT NULL,
  `horario` INT NULL,
  `local` VARCHAR(30) NULL,
  `dia` VARCHAR(30) NULL,
  `Prof_Responsavel` VARCHAR(30) NULL,
  `DISCIPLINAS_codigo` INT NULL,
  `PROFESSOR_FUNCIONARIO_matricula` INT NOT NULL,
  PRIMARY KEY (`ID_turma`),
  INDEX `fk_TURMA_DISCIPLINAS1_idx` (`DISCIPLINAS_codigo` ASC),
  INDEX `fk_TURMA_PROFESSOR1_idx` (`PROFESSOR_FUNCIONARIO_matricula` ASC),
  CONSTRAINT `fk_TURMA_DISCIPLINAS1`
    FOREIGN KEY (`DISCIPLINAS_codigo`)
    REFERENCES `modelo`.`DISCIPLINAS` (`codigo_disciplina`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_TURMA_PROFESSOR1`
    FOREIGN KEY (`PROFESSOR_FUNCIONARIO_matricula`)
    REFERENCES `modelo`.`PROFESSOR` (`FUNCIONARIO_matricula`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `modelo`.`ALUNO_ has_TURMA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `modelo`.`ALUNO_ has_TURMA` (
  `ALUNO_matricula` INT NOT NULL,
  `TURMA_IDturma` INT NOT NULL,
  PRIMARY KEY (`ALUNO_matricula`, `TURMA_IDturma`),
  INDEX `fk_ALUNO_has_TURMA_TURMA1_idx` (`TURMA_IDturma` ASC),
  INDEX `fk_ALUNO_has_TURMA_ALUNO1_idx` (`ALUNO_matricula` ASC),
  CONSTRAINT `fk_ALUNO_has_TURMA_ALUNO1`
    FOREIGN KEY (`ALUNO_matricula`)
    REFERENCES `modelo`.`ALUNO` (`matricula`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ALUNO_has_TURMA_TURMA1`
    FOREIGN KEY (`TURMA_IDturma`)
    REFERENCES `modelo`.`TURMA` (`ID_turma`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `modelo`.`DISCIPLINAS_has_NOTA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `modelo`.`DISCIPLINAS_has_NOTA` (
  `DISCIPLINAS_codigo` INT NOT NULL,
  `NOTA_ID_disciplina` INT NOT NULL,
  PRIMARY KEY (`DISCIPLINAS_codigo`, `NOTA_ID_disciplina`),
  INDEX `fk_DISCIPLINAS_has_NOTA_NOTA1_idx` (`NOTA_ID_disciplina` ASC),
  INDEX `fk_DISCIPLINAS_has_NOTA_DISCIPLINAS1_idx` (`DISCIPLINAS_codigo` ASC),
  CONSTRAINT `fk_DISCIPLINAS_has_NOTA_DISCIPLINAS1`
    FOREIGN KEY (`DISCIPLINAS_codigo`)
    REFERENCES `modelo`.`DISCIPLINAS` (`codigo_disciplina`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_DISCIPLINAS_has_NOTA_NOTA1`
    FOREIGN KEY (`NOTA_ID_disciplina`)
    REFERENCES `modelo`.`NOTA` (`ID_disciplina`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `modelo`.`DISCIPLINAS_has_PERIODO_LETIVO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `modelo`.`DISCIPLINAS_has_PERIODO_LETIVO` (
  `DISCIPLINAS_codigo` INT UNIQUE,
  `PERIODO_LETIVO_ID_periodo` INT UNIQUE,
  PRIMARY KEY (`DISCIPLINAS_codigo`, `PERIODO_LETIVO_ID_periodo`),
  INDEX `fk_DISCIPLINAS_has_PERIODO_LETIVO_PERIODO_LETIVO1_idx` (`PERIODO_LETIVO_ID_periodo` ASC),
  INDEX `fk_DISCIPLINAS_has_PERIODO_LETIVO_DISCIPLINAS1_idx` (`DISCIPLINAS_codigo` ASC),
  CONSTRAINT `fk_DISCIPLINAS_has_PERIODO_LETIVO_DISCIPLINAS1`
    FOREIGN KEY (`DISCIPLINAS_codigo`)
    REFERENCES `modelo`.`DISCIPLINAS` (`codigo_disciplina`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_DISCIPLINAS_has_PERIODO_LETIVO_PERIODO_LETIVO1`
    FOREIGN KEY (`PERIODO_LETIVO_ID_periodo`)
    REFERENCES `modelo`.`PERIODO_LETIVO` (`ID_periodo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `modelo`.`CURSO_has_DISCIPLINAS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `modelo`.`CURSO_has_DISCIPLINAS` (
  `CURSO_id_curso` INT NOT NULL,
  `CURSO_INSTITUTO_ID_instituto` INT NOT NULL,
  `DISCIPLINAS_codigo` INT NOT NULL,
  PRIMARY KEY (`CURSO_id_curso`, `CURSO_INSTITUTO_ID_instituto`, `DISCIPLINAS_codigo`),
  INDEX `fk_CURSO_has_DISCIPLINAS_DISCIPLINAS1_idx` (`DISCIPLINAS_codigo` ASC),
  INDEX `fk_CURSO_has_DISCIPLINAS_CURSO1_idx` (`CURSO_id_curso` ASC, `CURSO_INSTITUTO_ID_instituto` ASC),
  CONSTRAINT `fk_CURSO_has_DISCIPLINAS_CURSO1`
    FOREIGN KEY (`CURSO_id_curso` , `CURSO_INSTITUTO_ID_instituto`)
    REFERENCES `modelo`.`CURSO` (`id_curso` , `INSTITUTO_ID_instituto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_CURSO_has_DISCIPLINAS_DISCIPLINAS1`
    FOREIGN KEY (`DISCIPLINAS_codigo`)
    REFERENCES `modelo`.`DISCIPLINAS` (`codigo_disciplina`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `modelo`.`PRE_REQUISITO_has_DISCIPLINAS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `modelo`.`PRE_REQUISITO_has_DISCIPLINAS` (
  `DISCIPLINAS_codigo` INT NOT NULL,
  `DISCIPLINAS_codigo1` INT NOT NULL,
  PRIMARY KEY (`DISCIPLINAS_codigo`, `DISCIPLINAS_codigo1`),
  INDEX `fk_DISCIPLINAS_has_DISCIPLINAS_DISCIPLINAS2_idx` (`DISCIPLINAS_codigo1` ASC),
  INDEX `fk_DISCIPLINAS_has_DISCIPLINAS_DISCIPLINAS1_idx` (`DISCIPLINAS_codigo` ASC),
  CONSTRAINT `fk_DISCIPLINAS_has_DISCIPLINAS_DISCIPLINAS1`
    FOREIGN KEY (`DISCIPLINAS_codigo`)
    REFERENCES `modelo`.`DISCIPLINAS` (`codigo_disciplina`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_DISCIPLINAS_has_DISCIPLINAS_DISCIPLINAS2`
    FOREIGN KEY (`DISCIPLINAS_codigo1`)
    REFERENCES `modelo`.`DISCIPLINAS` (`codigo_disciplina`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `modelo`.`TELEFONE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `modelo`.`TELEFONE` (
  `ALUNO_matricula` INT NOT NULL,
  `telefone_aluno` INT NOT NULL,
  INDEX `fk_table1_ALUNO1_idx` (`ALUNO_matricula` ASC),
  PRIMARY KEY (`telefone_aluno`, `ALUNO_matricula`),
  CONSTRAINT `fk_table1_ALUNO1`
    FOREIGN KEY (`ALUNO_matricula`)
    REFERENCES `modelo`.`ALUNO` (`matricula`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `modelo`.`TELEFONE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `modelo`.`TELEFONE` (
  `ALUNO_matricula` INT NOT NULL,
  `telefone_aluno` INT NOT NULL,
  INDEX `fk_table1_ALUNO1_idx` (`ALUNO_matricula` ASC),
  PRIMARY KEY (`telefone_aluno`, `ALUNO_matricula`),
  CONSTRAINT `fk_table1_ALUNO1`
    FOREIGN KEY (`ALUNO_matricula`)
    REFERENCES `modelo`.`ALUNO` (`matricula`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
